// How many direct and indirect child nodes does each parent node — starting with the element with an id of 1 — have in the DOM generated by the following HTML:

<div id="1">
  <h1 id="2">Hello, <em id="3">World</em></h1>
  <p id="4">
    Welcome to wonderland. This is an
    <span id="5">awesome</span> place.
  </p>
  <a href="#" id="6"><strong id="7">Enter</strong></a>
  <div id="8"><p id="9"><a href="#" id="10">Go back</a></p></div>
</div>

/*

1. dirext - 9 indeirect - 12
2. dirext - 2 indeirect - 1
3. dirext - 1 indeirect - 0
4. dirext - 3 indeirect - 1
5. dirext - 1 indeirect - 0
6. dirext - 1 indeirect - 1
7. dirext - 1 indeirect - 0
8. dirext - 1 indeirect - 2
9 dirext - 1 indeirect - 1
10. dirext - 1 indeirect - 0

*/

function walk(node, callback) {
  callback(node);

  Array.from(node.childNodes).forEach(child => {
    walk(child, callback);
  });
}

function childNodes(id) {
  let totalChildren = -1;
  let node = document.getElementById(id);

  walk(node, () => totalChildren += 1);

  let directChildren = node.childNodes.length;
  return [directChildren, totalChildren - directChildren];
}

console.log(childNodes(1));
console.log(childNodes(4));
console.log(childNodes(9));

